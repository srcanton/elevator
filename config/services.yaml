# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

    drivania_api_host: '%env(DRIVANIA_API_HOST)%'

    openbravo_url: '%env(OPENBRAVO_URL)%'
    openbravo_user: '%env(OPENBRAVO_USER)%'
    openbravo_password: '%env(OPENBRAVO_PASSWORD)%'

    rabbit_host: '%env(RABBIT_HOST)%'
    rabbit_port: '%env(RABBIT_PORT)%'
    rabbit_user: '%env(RABBIT_USER)%'
    rabbit_password: '%env(RABBIT_PASSWORD)%'

    log_debug: '%env(LOG_DEBUG)%'
    log_filepath: '%env(LOG_FILEPATH)%'
    log_filename: '%env(LOG_FILENAME)%'

    elastic_host: '%env(ELASTIC_HOST)%'
    elastic_port: '%env(ELASTIC_PORT)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

